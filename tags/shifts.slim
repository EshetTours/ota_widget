---
---
shifts.mdc-image-list__item
  .shifts.chart.block.mdc-elevation--z1 if='{d.shifts}'
    .material-icons.info
      'info
    h2
      '{t('shifts.title')}

      button period='quarter' onclick='{changePeriod}' class='{selected: this.period == "quarter"}'
        '{t('charts.quarter')}
      button period='year' onclick='{changePeriod}' class='{selected: this.period == "year"}'
        '{t('charts.year')}

    #shifts-chart style='width: 100%; height: 500px'

  javascript:
    ota_widget.ui.tagClass.bind(this)()
    this.period = 'quarter'

    changePeriod(e) {
      this.w.charts.changePeriod(this, e.target.getAttribute('period'))
    }

    load() {
      tippy('shifts .material-icons.info', {
        content: this.t('shifts.description'),
      })

      this.w.charts.draw(this)
    }

    data() {
      var data = this.d.shifts
      if (!data) return

      var fData = {}
      _.each(_.values(data.company), (sdata) => {
        var pdata = sdata[this.period]
        // many data not available in quarter
        if (!pdata) return

        _.each(pdata.downwards.concat(pdata.upwards), (d) => {
          fData[d.segment_title] = fData[d.segment_title] || {}
          var cdata   = (fData[d.segment_title][this.period] = fData[d.segment_title][this.period] || [])
          _.each(d.over_time, (e) => {
            var count = e.current.review_count - e.previous.review_count
            cdata.push({date: e.current.date, count: count})
          })
        })
      })

      var series = _.keys(fData)
      return {
        header:     [''].concat(series),
        id:         'shifts-chart',
        series:     series,
        data:       fData,
        chartClass: google.visualization.LineChart,
      }
    }

    this.on('mount',  this.load)
    this.on('update', this.load)

